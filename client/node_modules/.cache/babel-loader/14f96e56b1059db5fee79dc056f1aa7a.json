{"ast":null,"code":"var _jsxFileName = \"/Users/AbdullahAltheiab/Desktop/online_class/cloud_developer_udacity/projects/cloud-developer-capstone/frontend/src/components/boxes.component.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nconst Boxes = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: \"/assets/318x180.svg\",\n    alt: \"Card image cap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Card title\"), /*#__PURE__*/React.createElement(CardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Card subtitle\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"Button\"))));\n};\n\nCard.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  className: PropTypes.string\n};\nCardBody.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardColumns.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardDeck.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardFooter.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardGroup.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardHeader.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardImg.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n  top: PropTypes.bool,\n  bottom: PropTypes.bool\n};\nCardImgOverlay.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardLink.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nCardSubtitle.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardText.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nCardTitle.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\nexport default Boxes;","map":{"version":3,"sources":["/Users/AbdullahAltheiab/Desktop/online_class/cloud_developer_udacity/projects/cloud-developer-capstone/frontend/src/components/boxes.component.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Boxes","props","propTypes","tag","PropTypes","oneOfType","func","string","inverse","bool","color","body","className","CardColumns","CardDeck","CardFooter","CardGroup","CardHeader","top","bottom","CardImgOverlay","CardLink","innerRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst Boxes = (props) => {\n  return (\n    <div>\n      <Card>\n        <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle>Card title</CardTitle>\n          <CardSubtitle>Card subtitle</CardSubtitle>\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n          <Button>Button</Button>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\n\nCard.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    inverse: PropTypes.bool,\n    color: PropTypes.string,\n    body: PropTypes.bool,\n    className: PropTypes.string\n  };\n  \n  CardBody.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardColumns.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardDeck.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardFooter.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardGroup.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardHeader.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardImg.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n    top: PropTypes.bool,\n    bottom: PropTypes.bool\n  };\n  \n  CardImgOverlay.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardLink.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n    innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  };\n  \n  CardSubtitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardText.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardTitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n\nexport default Boxes;"]},"metadata":{},"sourceType":"module"}